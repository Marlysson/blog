<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Daily Development - Marlysson Silva</title><link>https://marlysson.github.io/</link><description></description><lastBuildDate>Sun, 23 Jul 2017 14:20:00 -0300</lastBuildDate><item><title>Properties em Python ... como fazer encapsulamento pythônico</title><link>https://marlysson.github.io/python-properties-e-encapsulamento-na-orientacao-a-objetos.html</link><description>&lt;p&gt;Um tópico bastante interessante (porém curto) na orientação a objetos no Python são as properties. Elas são responsáveis por encapsular o acesso à variáveis das nossas classes, fazendo assim um design de classes mais completo, onde você pode ter algum processamento interno e só expor o que é adequado nas API's públicas de suas classes. Então vamos lá entender o que são elas e como usá-las.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marlysson Silva</dc:creator><pubDate>Sun, 23 Jul 2017 14:20:00 -0300</pubDate><guid isPermaLink="false">tag:marlysson.github.io,2017-07-23:/python-properties-e-encapsulamento-na-orientacao-a-objetos.html</guid><category>Python</category><category>Boas Práticas</category><category>Orientação a Objetos</category></item><item><title>O que você precisa saber para iniciar com Ambientes Virtuais</title><link>https://marlysson.github.io/o-que-voce-precisa-saber-sobre-ambientes-virtuais.html</link><description>&lt;p&gt;Nos dias atuais com o Python servindo para vários proprósitos fica difícil trabalhar com projetos de diversos seguimentos sem gerenciar todas as duas dependências, e ainda mais quem for iniciante no python e está querendo organizar seus projetos. Nesse posto pretendo explicar o necessário para você saber trabalhar com ambientes virtuais mais tranquilamente e sanar dúvidas que ainda existam.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marlysson Silva</dc:creator><pubDate>Sat, 03 Jun 2017 20:20:00 -0300</pubDate><guid isPermaLink="false">tag:marlysson.github.io,2017-06-03:/o-que-voce-precisa-saber-sobre-ambientes-virtuais.html</guid><category>Python</category><category>Ambientes Virtuais</category><category>Boas Práticas</category></item><item><title>Criando um loader com css puro</title><link>https://marlysson.github.io/loader-com-css-puro.html</link><description>&lt;p&gt;Bom pessoal , vou mostrar pra vocês como fazer um simples loader só com css . Já que eu estava revisando esse assunto por esses dias , resolvi postar essa dica rapidinho que pode ajudar vocês em algumas aplicações; Lembrando que tudo será feito só com css ( inclusive a animação ) , sem a necessidade de javascript , e também sem SVG ( para a parte das formas ). Então bora lá.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marlysson Silva</dc:creator><pubDate>Sun, 26 Feb 2017 17:00:00 -0300</pubDate><guid isPermaLink="false">tag:marlysson.github.io,2017-02-26:/loader-com-css-puro.html</guid><category>Frontend</category><category>css</category><category>experimentos</category></item><item><title>Princípios SOLID - Vantagens e fragilidades de código</title><link>https://marlysson.github.io/principios-solid-a-teoria.html</link><description>&lt;p&gt;No desenvolvimento de software, nós desenvolvedores sempre presamos por construir sistema que sejam o mais fiel possível ao pedido do cliente ( por mais que haja mudanças no decorrer do tempo ) , mas além de tudo presamos por outros fatores que acontecem no decorrer ou após o desenvolvimento.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marlysson Silva</dc:creator><pubDate>Sun, 12 Feb 2017 05:00:00 -0300</pubDate><guid isPermaLink="false">tag:marlysson.github.io,2017-02-12:/principios-solid-a-teoria.html</guid><category>Orientação a Objetos</category><category>Boas Práticas</category></item></channel></rss>